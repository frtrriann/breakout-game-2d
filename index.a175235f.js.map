{"mappings":"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","sources":["src/ball.ts","src/constants.ts","src/paddle.ts","src/helpers.ts","src/bricks.ts","src/game-loop.ts","src/score.ts","src/lives.ts","src/index.ts"],"sourcesContent":["export class Ball implements MovableGameObjectInterface {\n  canvas;\n  ctx;\n  x = 0;\n  y = 0;\n  dx = 0;\n  dy = 0;\n  radius: number = 10;\n  constructor(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.setInitialPosition();\n  }\n\n  setInitialPosition() {\n    this.x = this.canvas.width / 2;\n    this.y = this.canvas.height - 30;\n    this.dx = 2;\n    this.dy = -2;\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    this.ctx.fillStyle = \"#0095DD\";\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  setDirection() {\n    if (\n      this.x + this.dx > this.canvas.width - this.radius ||\n      this.x + this.dx < this.radius\n    ) {\n      this.revertXDirection();\n    }\n    if (this.y + this.dy < this.radius) {\n      this.revertYDirection();\n    }\n  }\n\n  calcNewPosition() {\n    this.x += this.dx;\n    this.y += this.dy;\n  }\n\n  revertXDirection() {\n    this.dx = -this.dx;\n  }\n\n  revertYDirection() {\n    this.dy = -this.dy;\n  }\n}\n","export const ARROW_RIGHT_KEY = \"ArrowRight\";\nexport const ARROW_LEFT_KEY = \"ArrowLeft\";\n","import { ARROW_LEFT_KEY, ARROW_RIGHT_KEY } from \"./constants\";\nimport { createRoundRect } from \"./helpers\";\n\nexport class Paddle implements MovableGameObjectInterface {\n  canvas;\n  ctx;\n  x = 0;\n  y = 0;\n  dx = 7;\n  height: number = 15;\n  width: number = 75;\n  rightPressed: boolean = false;\n  leftPressed: boolean = false;\n  constructor(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.setInitialPosition();\n    document.addEventListener(\"keydown\", this.keyDownHandler.bind(this), false);\n    document.addEventListener(\"keyup\", this.keyUpHandler.bind(this), false);\n    document.addEventListener(\n      \"mousemove\",\n      this.mouseMoveHandler.bind(this),\n      false\n    );\n  }\n\n  setInitialPosition() {\n    this.x = (this.canvas.width - this.width) / 2;\n    this.y = this.canvas.height - this.height;\n  }\n\n  mouseMoveHandler(event: MouseEvent) {\n    const relativeX = event.clientX - this.canvas.offsetLeft;\n    if (relativeX > 0 && relativeX < this.canvas.width) {\n      const centerMousePosition = relativeX - this.width / 2;\n      this.x = Math.min(\n        Math.max(0, centerMousePosition),\n        this.canvas.width - this.width\n      );\n    }\n  }\n\n  keyDownHandler(event: KeyboardEvent) {\n    switch (event.key) {\n      case ARROW_RIGHT_KEY: {\n        this.rightPressed = true;\n        break;\n      }\n      case ARROW_LEFT_KEY: {\n        this.leftPressed = true;\n        break;\n      }\n    }\n  }\n\n  keyUpHandler(event: KeyboardEvent) {\n    switch (event.key) {\n      case ARROW_RIGHT_KEY: {\n        this.rightPressed = false;\n        break;\n      }\n      case ARROW_LEFT_KEY: {\n        this.leftPressed = false;\n        break;\n      }\n    }\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    createRoundRect(\n      this.ctx,\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      4\n    );\n\n    this.ctx.fillStyle = \"#4b4b4b\";\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  calcNewPosition() {\n    if (this.rightPressed && this.x < this.canvas.width - this.width) {\n      this.x += this.dx;\n    }\n    if (this.leftPressed && this.x > 0) {\n      this.x -= this.dx;\n    }\n  }\n}\n","export function createRoundRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  r: number\n) {\n  if (w < 2 * r) r = w / 2;\n  if (h < 2 * r) r = h / 2;\n  ctx.beginPath();\n  ctx.moveTo(x + r, y);\n  ctx.arcTo(x + w, y, x + w, y + h, r);\n  ctx.arcTo(x + w, y + h, x, y + h, r);\n  ctx.arcTo(x, y + h, x, y, r);\n  ctx.arcTo(x, y, x + w, y, r);\n  ctx.closePath();\n  return ctx;\n}\n","class Brick implements GameObjectInterface {\n  canvas;\n  ctx;\n  x: number;\n  y: number;\n  status: number = 1;\n  readonly width = 75;\n  readonly height = 20;\n  readonly padding = 10;\n  readonly offsetTop = 30;\n  readonly offsetLeft = 30;\n  constructor(\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D,\n    column: number,\n    row: number\n  ) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.x = column * (this.width + this.padding) + this.offsetLeft;\n    this.y = row * (this.height + this.padding) + this.offsetTop;\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.rect(this.x, this.y, this.width, this.height);\n    this.ctx.fillStyle = \"#0095DD\";\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  destroy() {\n    this.status = 0;\n  }\n\n  get isDestroyed() {\n    return this.status === 0;\n  }\n}\n\nexport class Bricks {\n  canvas;\n  ctx;\n  bricks: Brick[][] = [];\n  readonly rowCount = 3;\n  readonly columnCount = 5;\n\n  constructor(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.createBricks();\n  }\n\n  createBricks() {\n    for (let column = 0; column < this.columnCount; column++) {\n      this.bricks[column] = [];\n      for (let row = 0; row < this.rowCount; row++) {\n        this.bricks[column][row] = new Brick(\n          this.canvas,\n          this.ctx,\n          column,\n          row\n        );\n      }\n    }\n  }\n\n  detectBallCollision(ballX: number, ballY: number): boolean {\n    for (let column = 0; column < this.columnCount; column++) {\n      for (let row = 0; row < this.rowCount; row++) {\n        const brick = this.bricks[column][row];\n        if (\n          !brick.isDestroyed &&\n          ballX > brick.x &&\n          ballX < brick.x + brick.width &&\n          ballY > brick.y &&\n          ballY < brick.y + brick.height\n        ) {\n          brick.destroy();\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  draw() {\n    for (let column = 0; column < this.columnCount; column++) {\n      for (let row = 0; row < this.rowCount; row++) {\n        if (this.bricks[column][row].status == 1) {\n          const brick = this.bricks[column][row];\n          brick.draw();\n        }\n      }\n    }\n  }\n}\n","export class GameLoop {\n  update;\n  draw;\n  paused: boolean = true;\n  constructor(update: any, draw: any) {\n    this.update = update;\n    this.draw = draw;\n    this.run = this.run.bind(this);\n  }\n\n  private run() {\n    if (this.paused) return;\n    requestAnimationFrame(this.run);\n    this.update();\n    this.draw();\n  }\n\n  play() {\n    if (this.paused) {\n      this.paused = false;\n      this.run();\n    }\n  }\n\n  pause() {\n    this.paused = true;\n  }\n}\n","\nexport  class Score {\n    canvas;\n    ctx;\n    score = 0\n    constructor( canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n\n        this.draw();\n\n    }\n\n    increaseScore() {\n        this.score++;\n        this.draw();\n    }\n\n    setToZero() {\n        this.score = 0;\n        this.draw();\n    }\n\n    draw() {\n        this.ctx.font = \"16px Arial\";\n        this.ctx.fillStyle = \"#0095DD\";\n        this.ctx.fillText(`Score: ${this.score}`, 8, 20);\n    }\n    \n}","\nexport  class Lives {\n    canvas;\n    ctx;\n    private lives = 3\n    constructor( canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n\n        this.draw();\n\n    }\n\n    get value() {\n        return this.lives\n    }\n\n    decreaseLives() {\n        this.lives--;\n        this.draw();\n    }\n\n    setToZero() {\n        this.lives = 0;\n        this.draw();\n    }\n\n    draw() {\n        this.ctx.font = \"16px Arial\";\n        this.ctx.fillStyle = \"#0095DD\";\n        this.ctx.fillText(`❤️ ${this.lives}`, this.canvas.width - 65, 20);\n    }\n    \n}","import { Ball } from \"./ball\";\nimport { Paddle } from \"./paddle\";\nimport { Bricks } from \"./bricks\";\nimport { GameLoop } from \"./game-loop\";\nimport { Score } from \"./score\";\nimport { Lives } from \"./lives\";\n\nclass Game {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  ball: Ball;\n  paddle: Paddle;\n  bricks: Bricks;\n  score: Score;\n  game: GameLoop\n  lives: Lives;\n  constructor() {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = 480;\n    this.canvas.height = 640;\n    this.ctx = this.canvas.getContext(\"2d\")!;\n    this.ball = new Ball(this.canvas, this.ctx);\n    this.paddle = new Paddle(this.canvas, this.ctx);\n    this.bricks = new Bricks(this.canvas, this.ctx);\n    this.score = new Score(this.canvas, this.ctx)\n    this.lives = new Lives(this.canvas, this.ctx)\n    document.body.appendChild(this.canvas);\n    window.screen.orientation.lock('portrait')\n    this.game = new GameLoop(this.update.bind(this), this.draw.bind(this));\n    this.game.play()\n  }\n\n  wallCollisionDetection() {\n    if (this.ball.y + this.ball.dy > this.canvas.height - this.ball.radius) {\n      if (\n        this.ball.x > this.paddle.x &&\n        this.ball.x < this.paddle.x + this.paddle.width\n      ) {\n        this.ball.revertYDirection();\n      } else {\n        this.lives.decreaseLives()\n        if (!this.lives.value) {\n          this.game.pause();\n          alert(\"GAME OVER\");\n          document.location.reload();\n        } else {\n          this.paddle.setInitialPosition();\n          this.ball.setInitialPosition();\n        }\n      }\n    }\n  }\n\n  brickCollisionDetection() {\n    if (this.bricks.detectBallCollision(this.ball.x, this.ball.y)) {\n      this.ball.revertYDirection();\n      this.score.increaseScore();\n      if (this.score.score == this.bricks.rowCount * this.bricks.columnCount) {\n        alert(\"YOU WIN, CONGRATULATIONS!\");\n        document.location.reload();\n      }\n    }\n  }\n\n\n  update() {\n    this.ball.setDirection();\n    this.brickCollisionDetection();\n    this.wallCollisionDetection();\n    this.ball.calcNewPosition();\n    this.paddle.calcNewPosition();\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ball.draw();\n    this.paddle.draw();\n    this.bricks.draw();\n    this.score.draw();\n    this.lives.draw();\n  }\n}\n\nnew Game();\n"],"names":["$464aaa2557f4538e$export$a83d7c3fa53790c9","x","y","dx","dy","radius","constructor","canvas","ctx","this","setInitialPosition","width","height","draw","beginPath","arc","Math","PI","fillStyle","fill","closePath","setDirection","revertXDirection","revertYDirection","calcNewPosition","$9ecda7333d28e490$export$db321d35ff67e627","$9ecda7333d28e490$export$c16026500f1ac425","$4c9e537000809b84$export$8b68b11806a145bb","rightPressed","leftPressed","document","addEventListener","keyDownHandler","bind","keyUpHandler","mouseMoveHandler","event","relativeX","clientX","offsetLeft","centerMousePosition","min","max","key","w","h","r","moveTo","arcTo","$39cea79b6f3592fb$var$Brick","status","padding","offsetTop","column","row","rect","destroy","isDestroyed","$39cea79b6f3592fb$export$b3834591bbd98cfe","bricks","rowCount","columnCount","createBricks","detectBallCollision","ballX","ballY","brick","$7a02c2f17a222e8a$export$c33317e0a62b8bbb","paused","update","run","requestAnimationFrame","play","pause","$d7c47304def68957$export$6735cf84ecd2736","score","increaseScore","setToZero","font","fillText","$6a5a84e055400663$export$43969f12dca026a7","lives","value","decreaseLives","createElement","getContext","ball","paddle","body","appendChild","window","screen","orientation","lock","game","wallCollisionDetection","alert","location","reload","brickCollisionDetection","clearRect"],"version":3,"file":"index.a175235f.js.map"}